parameters:
  - name: projectName
    displayName: Name of the Project to build
    type: string

  - name: projectVersion
    displayName: Target build version
    type: string

  - name: mavenGoals
    displayName: "Override Maven goals (default: deploy)"
    type: string
    default: test

  - name: mavenOptions
    displayName: Additional Maven Options
    type: string
    default:

steps:
  - bash: |
      if [ -z "$PROJECT_NAME" ]; then
        echo "##vso[task.logissue type=error;]Missing template parameter \"projectName\""
        echo "##vso[task.complete result=Failed;]"
      fi
      if [ -z "$PROJECT_VERSION" ]; then
        echo "##vso[task.logissue type=error;]Missing template parameter \"projectVersion\""
        echo "##vso[task.complete result=Failed;]"
      fi
    env:
      PROJECT_NAME: ${{ parameters.projectName }}
      PROJECT_VERSION: ${{ parameters.projectVersion }}
    displayName: Check for required parameters

  # Save a copy of the original POM file because JaCoCo modifies it, which breaks caching
  - script: cp pom.xml pom.xml.orig
    displayName: Save original pom.xml

  # Maven Cache
  - task: Cache@2
    displayName: Cache Maven local repo
    inputs:
      key: 'maven | "$(Agent.OS)" | **/pom.xml.orig' # Use original, unaltered pom file as key in Cache
      restoreKeys: |
        maven | "$(Agent.OS)"
        maven
      path: $(MAVEN_CACHE_FOLDER)

  # Sonar
  - task: SonarCloudPrepare@1
    displayName: 'Sonar prepare analysis configuration'
    inputs:
      SonarCloud: '$(SONAR_CLOUD)'
      organization: '$(SONAR_ORGANIZATION)'
      scannerMode: 'Other'
      # Additional properties that will be passed to the scanner,
      # Put one key=value per line, example:
      # sonar.exclusions=**/*.bin
      extraProperties: |
        sonar.coverage.jacoco.xmlReportPaths=CCReport43F6D5EF/jacoco.xml
        sonar.exclusions=src/main/test/**
        sonar.exclusions=src/integration-test/**
        sonar.exclusions=src/contract-test/**

        # Initial behavior of Maven task is that the SonarScanner uses information contained in Maven
        # object model to provide smart defaults for most of the standard analysis parameters.
        # You can however override this by setting wanted properties in this extraProperties space.
        # Read more about this : https://docs.sonarqube.org/latest/analysis/scan/sonarscanner-for-maven/#header-4


  # Maven build, test and create docker image
  - task: Maven@3
    displayName: 'Build & Unit Test'
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
      mavenAuthenticateFeed: true
      mavenVersionOption: 'Default'
      skipEffectivePom: true
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '$(JDK_VERSION)'
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      goals: ${{ parameters.mavenGoals }}
#      codeCoverageToolOption: JaCoCo
      sonarQubeRunAnalysis: true
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      options: '-Drevision=${{parameters.projectVersion}} ${{ parameters.mavenOptions }}'

  # Maven sonar:sonar
  - task: Maven@3
    displayName: 'Sonar'
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m $(MAVEN_OPTS)'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '$(JDK_VERSION)'
      jdkArchitectureOption: 'x64'
      sonarQubeRunAnalysis: true
#      goals: 'sonar:sonar'
      options: '-B org.jacoco:jacoco-maven-plugin:prepare-agent verify org.jacoco:jacoco-maven-plugin:report org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Drevision=$(VERSION)'

  # Uncomment the next task to wait until SonarCloud processing has
  # finished and to publish the result on the Pipeline build summary
  - task: SonarCloudPublish@1
    displayName: 'Sonar publish results on build summary'
    inputs:
      pollingTimeoutSec: '300'
